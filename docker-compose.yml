services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: SiteAccounts
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "SiteAccounts" ]
      interval: 1s
      retries: 10
      start_period: 15s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      retries: 10
      start_period: 5s

  backend:
    build:
      context: ./backend/
    container_name: server-panel
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ServersDirectory=/mnt
      - DatabaseConnectionString=Host=postgres;User Id=postgres;Password=1;Port=5432;Database=SiteAccounts; # строка подключения PostgreSQL
      - RedisConnection=redis:6379,abortConnect=false # Строка подключения Redis
    ports:
      - "5000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - D:/Servers:/mnt # для изменения папки нужно заменить D:/Servers

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "3000:80"

  dst_server:
    profiles: ["servers"]
    build:
      context: ./backend/Configs/DST templates/ContainerConfigs

  minecraft:
    profiles: ["servers"]
    build:
      context: ./backend/Configs
      dockerfile: Minecraft.Dockerfile

  terraria_server:
    profiles: ["servers"]
    build:
      context: ./backend/Configs/Terraria